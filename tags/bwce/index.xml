<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bwce on Alexander von Boguszewski</title>
    <link>http://alexander.vonboguszewski.name/tags/bwce/</link>
    <description>Recent content in Bwce on Alexander von Boguszewski</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language>
    <lastBuildDate>Sat, 23 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://alexander.vonboguszewski.name/tags/bwce/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TIBCO BWCE auf Kubernetes</title>
      <link>http://alexander.vonboguszewski.name/techdocs/bwce_on_kubernetes/</link>
      <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://alexander.vonboguszewski.name/techdocs/bwce_on_kubernetes/</guid>
      <description>In diesem Blogpost werden wir die TIBCO BWCE Applikation entwickeln und das Docker Image auf einem lokalen Kubernetes Cluster (Minikube) starten.
Was ist Kubernetes? Kubernetes (K8s, griechisch für &amp;ldquo;Steuermann&amp;rdquo; oder &amp;ldquo;Pilot&amp;rdquo;) ist ein Open-Source-System zur Automatisierung von Deployment, Skalierung und Management von containerisierten Anwendungen. Es wurde ursprünglich von Google erstellt und ist meiner Meinung nach das das verbreitetste Tool zur Container Orchestrierung. Einen einfachen Einstieg um K8 auf einem Laptop zu nutzen ist Minikube.</description>
    </item>
    
    <item>
      <title>TIBCO BWCE Container mit Docker</title>
      <link>http://alexander.vonboguszewski.name/techdocs/bwce_docker/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://alexander.vonboguszewski.name/techdocs/bwce_docker/</guid>
      <description>Mit TIBCO BusinessWorks ™ Container Edition (BWCE) können recht schnell und einfach Anwendungen gebaut werden, die nativ in Docker- oder Cloud-Foundry-Containern deployed werden können. TIBCO liefert zwar ein eigenes Standard Image, dies ist meiner Meinung aber recht groß und hat auch einige andere Nachteile. Wir können aber auch selbst ein eigenes Base-Image erstellen. Nachfolgendes Beispiel ist zwar auch nicht Production Ready, soll aber als Inspiration für eigene Ansätze dienen. Als Base Image verwende ich Alpine Linux, da die Basis Installation nur 5 MByte groß ist.</description>
    </item>
    
    <item>
      <title>Vergleich TIBCO BWCE mit BW6</title>
      <link>http://alexander.vonboguszewski.name/techdocs/bwce_vs_bw6/</link>
      <pubDate>Fri, 27 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://alexander.vonboguszewski.name/techdocs/bwce_vs_bw6/</guid>
      <description>Ein Enterprise Service Bus (ESB) wird in vielen Unternehmen als strategische Integrationsplattform zwischen verschiedenen Anwendungen, kommerzieller Standardsoftware, Legacy-Anwendungen, Datenbanken und Cloud Services eingesetzt. In geschäftskritischen Einsätzen bei Banken, Einzelhändlern, Fluggesellschaften, Telekommunikationsunternehmen und anderen Unternehmen könnte ein zentrales ESB mit hoher Performance, hoher Verfügbarkeit und Fehlertoleranz auch in Zukunft eine gute Wahl sein.
Andererseits ist ein ESB eine komplexe Angelegenheit und schwergewichtiges Biest. Diese Komplexität ist auch einer der Gründe, warum viele SOA-Projekte gescheitert sind.</description>
    </item>
    
  </channel>
</rss>