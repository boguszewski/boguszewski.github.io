<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Alexander von Boguszewski</title>
    <link>http://alexander.vonboguszewski.name/tags/java/</link>
    <description>Recent content in Java on Alexander von Boguszewski</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language>
    <lastBuildDate>Thu, 29 Dec 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://alexander.vonboguszewski.name/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JDBC Tester</title>
      <link>http://alexander.vonboguszewski.name/techdocs/java_oracle_jdbc_tester/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://alexander.vonboguszewski.name/techdocs/java_oracle_jdbc_tester/</guid>
      <description>JDBC Verbindungen, insbesondere die Connection URLS sind nicht immer einfach zu testen. FÃ¼r Oracle habe ich ein kleines Beispiel zusammengestellt.
import java.sql.DriverManager; import java.sql.Connection; import java.sql.SQLException; import java.sql.Statement; import java.sql.ResultSet; import java.io.Console; public class JDBCTester { private static final String ORACLE_DRIVER =&amp;#34;oracle.jdbc.driver.OracleDriver&amp;#34;; private static String driverClassName; private static String jdbcURL; private static String username; private static String password; /** Simple Test Program for JDBC Connections EXIT CODES (for further processing in bash/console) 0 = Everything OK 1 = No Connection to Database 2 = No Statement from Connection 3 = No Result from Test Statement -1 = Can not close Database Connection -2 = No Database Driver -3 = No Database URL -4 = No Console Instance for User/Password Input @author Alexander von Boguszewski **/ public static void main(String[] args) { System.</description>
    </item>
    
    <item>
      <title>Java Klassen in Jars finden</title>
      <link>http://alexander.vonboguszewski.name/techdocs/java_find_jars/</link>
      <pubDate>Sat, 12 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://alexander.vonboguszewski.name/techdocs/java_find_jars/</guid>
      <description>Java Klassen in Jars finden Um um herauszufinden in welchem JAR Archiv sich eine Java Klasse versteckt, kann man unter Linux die Kombination von jar. grep, and find verwenden (Achtung case sensitively)
find path/to/libs -name &amp;#39;*.jar&amp;#39; -exec grep -Hls ClassName {} \; </description>
    </item>
    
  </channel>
</rss>
